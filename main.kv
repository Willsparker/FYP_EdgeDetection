#:kivy 1.11.0

### Legend:
# Rules:
#  - camelCase
#  - Xs before Ys
#  - ID @ TOP, followed by size, position, info, functionality
# IDs:
#  - Buttons = btn...
#  - Labels = lbl...
#  - Text Input = txt...
#  - Grid Layout = grd
#  - Float layout = flt
#  - Slider = sldr
#  - Spinner = spnr
#  - CheckBox = cb
#  - ProgressBar = prgs

<Root>:
    # Background of whole app
    canvas.before:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size
    #Overall Window
    BoxLayout:
        orientation: 'vertical'
        # Top Button Panel
        BoxLayout:
            size_hint_x: 0.35
            size_hint_y: None
            height: 30
            Button:
                text: 'Load'
                font_size: 20
                on_release: root.show_load(1)
            Button:
                text: 'Save'
                font_size: 20
                on_release: root.show_save()
            Button:
                text: 'Undo'
                font_size: 20
                on_release: root.undoTransform()
            Spinner:
                id: spnrPreset
                size_hint_x: 3
                text: 'Preset Filters'
                values: 
                    [ "Identity",
                    "Sobel_X", "Sobel_Y",
                    "Prewitt_X", "Prewitt_Y",
                    "Gaussian Blur 3x3", "Gaussian Blur 5x5",
                    "Average Filter 3x3", "Average Filter 5x5",
                    "-ve Laplacian" , "-ve LoG" , "+ve Laplacian", "+ve LoG"]
                font_size: 20
                on_text: root.on_spinner_change(self.text)
            Button:
                size_hint_x: 5
                text: 'Iris Detection'
                font_size: 20
                on_release: root.irisDetector()
            Button:
                size_hint_x: 1.5
                text: 'FFT'
                font_size: 20
                on_release: root.fourierTransform()
            Button:
                size_hint_x: 5
                text: 'Iris Unwrapping'
                font_size: 20
                on_release: root.irisUnwrap()

            Button:
                size_hint_x: 5
                text: 'Gabor Filter'
                font_size: 20
                on_release: root.gaborFilter()


        # Image Viewer + Options Menu
        FloatLayout:
            Image:
                id: imgInput
                size_hint: (0.5,0.75)
                pos_hint: {'x': 0, 'y': 0.25}
                source: ''
                allow_stretch: True
            Label:
                id: lblInfo
                size_hint: (0.4,0.25)
                pos_hint: {'x': 0.1, 'y': 0}
                text: "Information Area"
                halign: 'left'
                valign: 'top'
                markup: True
                font_size: 18
            Label:
                id: lblGrads
                size_hint: (0.1,0.25)
                pos_hint: {'x': 0.02, 'y':0}
                multiline: True
                halign: 'left'
                markup: True
                font_size: 17
            Button:
                id: btnDelGrads
                size_hint: (0.1,0.05)
                pos_hint: {'x': 0.02, 'y':0}
                text: "Delete Gradients"
                font_size: 20
                background_color: (1, 1, 1, 0.5)
                on_release: root.deleteGradients()

            # Options Menu
            FloatLayout:
                size_hint: (0.5,1)
                pos_hint: {'x':.5}
                orientation:'vertical'

                # User-Input Matrix Elements
                TextInput:
                    id: txtMatrixCoeff
                    size_hint: (.15,.1)
                    pos_hint:{'x':.05, 'y':0.70}
                    text: "1"
                    font_size: 30
                GridLayout:
                    id: grdUsrMatrix
                    size_hint: (.60,.5)
                    pos_hint: {'x':.22, 'y':0.5}
                Slider:
                    id: sldrMatrixSize
                    size_hint: (0.1,0.40)
                    pos_hint: {'x':0.86, 'y':0.50}
                    min: 1
                    max: 7
                    step: 1
                    value: 3
                    value_track: True
                    value_track_color: [1,0,0,1]
                    orientation: 'vertical'
                    on_touch_move: root.initialiseGrid(int(self.value))
                Label:
                    size_hint: (0.1,0.1)
                    pos_hint: {'x':0.86, 'y':0.90}
                    text: "Size: " + str(int(sldrMatrixSize.value))
                    multiline: True
                    font_size: 20
                
                # Grid of Image Bool Options
                GridLayout:
                    size_hint: (0.5,0.1)
                    pos_hint: {'x':0.05, 'y':0.38}
                    rows:5
                    cols:2

                    # Set background to dark grey
                    canvas.before:
                        Color:
                            rgba: 0.75, 0.75, 0.75, 0.3
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    
                    # TODO: Sort out the column offset
                    # TODO: Make my own Kivy checkbox w/ label widget
                    Label:
                        text: "Greyscale:"
                        font_size: 20
                    CheckBox:
                        id: cbGrey 
                        active: False
                        on_release: root.checkOptions()
                    Label:
                        text: "Normalise pixel values:"
                        font_size: 20
                    CheckBox:
                        id: cbGreyVals
                        active: False
                        on_release: root.checkOptions()
                    Label:
                        text: "Remove blackspace:"
                        font_size: 20
                    CheckBox:
                        id: cbAlpha
                        active: False
                        on_release: root.checkOptions()
                    Label:
                        text: "Save img gradient:"
                        font_size: 20
                    CheckBox:
                        id: cbSveGrad
                        active: False
                        on_release: root.checkOptions()

                Button:
                    size_hint: (0.23,0.05)
                    pos_hint: {'x':0.70, 'y':0.41}
                    text: 'Apply mask'
                    font_size: 25
                    background_color: (1, 1, 1, 0.5)
                    on_release: root.applyTransform()
                Button:
                    id: btnResultGrad
                    size_hint: (0.30,0.05)
                    pos_hint: {'x':0.70, 'y':0.35}
                    disabled: True
                    text: 'Get Resultant Grad'
                    font_size: 25
                    background_color: (1, 1, 1, 0.5)
                    on_release: root.resultantGradient()
                Button:
                    id: btnColourize
                    size_hint: (0.25,0.05)
                    pos_hint: {'x':0.70, 'y':0.23}
                    disabled: True
                    text: 'Colourize Image'
                    font_size: 25
                    background_color: (1, 1, 1, 0.5)
                    on_release: root.colourizeImage()
                Button:
                    id: btnCanny
                    size_hint: (0.30,0.05)
                    pos_hint: {'x':0.70, 'y':0.29}
                    disabled: True
                    text: 'Canny Edge Detection'
                    font_size: 25
                    background_color: (1, 1, 1, 0.5)
                    on_release: root.cannyDetection()


                # Stuff to do with Blending
                Label:
                    size_hint: (0.1,0.1)
                    pos_hint: {'x':0.05, 'y':0.27}
                    text: "Blend levels: " + str(int(sldrBlendVal.value))
                    font_size: 20
                Slider:
                    id: sldrBlendVal
                    size_hint: (0.1,0.3)
                    pos_hint: {'x':0.0, 'y':0.0}
                    value_track: True
                    value_track_color: [0,1,0,1]
                    min: 1
                    max: 100
                    value: 25
                    orientation: 'vertical'
                Button:
                    size_hint: (0.17,0.05)
                    pos_hint: {'x': 0.1, 'y': 0.0}
                    text: "Blend"
                    font_size: 25
                    background_color: (1, 1, 1, 0.5)
                    on_release: root.show_load(2)

                # Stuff to do with intensity boundaries
                Slider:
                    id: sldrUpperPixThresh
                    size_hint: (0.1,0.3)
                    pos_hint: {'x':0.30, 'y':0.0}
                    value_track: True
                    value_track_color: [0,0,1,1]
                    min: int(sldrLowerPixThresh.value)+1
                    max: 255
                    value: 200
                    orientation: 'vertical'
                Label:
                    size_hint: (0.75,0.1)
                    pos_hint: {'x':0.10, 'y':0.27}
                    text: "Higher Bound: " + str(int(sldrUpperPixThresh.value)) + " Lower Bound: " + str(int(sldrLowerPixThresh.value))
                    font_size: 20
                Slider: 
                    id: sldrLowerPixThresh
                    size_hint: (0.1,0.3)
                    pos_hint: {'x':0.35, 'y':0.0}
                    value_track: True
                    value_track_color: [0,0,1,1]
                    min: 0
                    max: int(sldrUpperPixThresh.value)-1
                    value: 50
                    orientation: 'vertical'
                Button:
                    size_hint: (0.32,0.05)
                    pos_hint: {'x':0.45, 'y':0.00}
                    text: 'Quantize Intensity Values'
                    font_size: 25
                    background_color: (1, 1, 1, 0.5)
                    on_release: root.quantizeImageIntensities()

                TextInput:
                    id: txtDoubleThreshUpper
                    size_hint: (0.25,0.05)
                    pos_hint: {'x': 0.70, 'y': 0.15}
                    hint_text: "Canny Upper Threshold"

                TextInput:
                    id: txtDoubleThreshLower
                    size_hint: (0.25,0.05)
                    pos_hint: {'x': 0.70, 'y': 0.08}
                    hint_text: "Canny Lower Threshold"
                    

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: './images'                   # Starts with current path

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()
            Button:
                text: "Load"
                on_release: root.load(filechooser.selection)

<SaveDialog>:
    text_input: txtUserInput
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: './images/'
            on_selection: txtUserInput.text = self.selection and self.selection[0] or ''

        TextInput:
            id: txtUserInput
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, txtUserInput.text)